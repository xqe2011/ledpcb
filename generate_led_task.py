#!/bin/python
import xml
import xml.etree.ElementTree
import os

def convertXMLTaskToCode(xmlFile):
    print("Parsing XML file: " + xmlFile)
    with open(xmlFile) as file:
        xmlData = xml.etree.ElementTree.parse(file).getroot()
    taskName = xmlData.attrib["name"]
    cycleTime = xmlData.attrib["cycle"]
    leds = []
    for led in xmlData.findall("Led"):
        points = []
        for point in led.findall("Point"):
            rgb = tuple(int(point.attrib["color"][1:][i:i+2], 16) for i in (0, 2, 4))
            points.append((point.attrib["time"], rgb[0], rgb[1], rgb[2]))
        points.sort(key=lambda x: x[0])
        leds.append(points)
    memoryMap = "{" + ", ".join((", ".join(f"{{{point[1]}, {point[2]}, {point[3]}, {point[0]}}}" for point in led)) for led in filter(lambda x: len(x), leds)) + "}"
    memoryStart = 0
    pointsStartMemoryString = ""
    pointsLengthString = ""
    for led in leds:
        pointsStartMemoryString += f"&{taskName}Memory[{memoryStart}], "
        pointsLengthString += f"{len(led)}, "
        memoryStart += len(led)
    taskInfo = f"{{{{{pointsStartMemoryString[:-2]}}}, {{{pointsLengthString[:-2]}}}, {cycleTime}}}"
    generatedText = f"""
const LED_RGBPoint {taskName}Memory[] = {memoryMap};
const LED_TaskInfo {taskName} = {taskInfo};
    """
    return generatedText

def main():
    file = "/* 这是脚本生成的代码文件,请勿修改。This file is generated by script, READ ONLY! */\n\n#include \"common.h\"\n"
    for name in os.listdir("./led_tasks"):
        file += convertXMLTaskToCode("./led_tasks/" + name)
    with open("./led_task.ino", "w") as f:
        f.write(file)

if __name__ == "__main__":
    main()